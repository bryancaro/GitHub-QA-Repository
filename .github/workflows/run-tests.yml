name: Run Tests and Upload to Azure DevOps

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Select test type to run'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - api
        - ui

env:
  AZURE_DEVOPS_ORG: fractalteamio
  AZURE_DEVOPS_PROJECT: Test
  AZURE_DEVOPS_PAT: 4uoqty9TiY5sOJ6JrFpCZtHq6fLzeVBMgM9uFnPfGZbiMj2SdrAZJQQJ99BDACAAAAAAAAAAAAASAZDO1qwa

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-azurepipelines
        playwright install
        playwright install-deps

    - name: Run tests
      shell: pwsh
      run: |
        $env:PYTHONPATH = "$env:PYTHONPATH;."
        if ($env:GITHUB_EVENT_NAME -eq "workflow_dispatch") {
          if ($env:GITHUB_EVENT_INPUTS_TEST_TYPE -eq "api") {
            pytest api_tests/ --html=report.html --self-contained-html --css=assets/style.css --capture=sys --show-capture=all --verbose --tb=long --screenshot=only-on-failure --junitxml=test-results.xml
          } elseif ($env:GITHUB_EVENT_INPUTS_TEST_TYPE -eq "ui") {
            pytest ui_tests/ --html=report.html --self-contained-html --css=assets/style.css --capture=sys --show-capture=all --verbose --tb=long --screenshot=only-on-failure --junitxml=test-results.xml
          } else {
            pytest api_tests/ ui_tests/ --html=report.html --self-contained-html --css=assets/style.css --capture=sys --show-capture=all --verbose --tb=long --screenshot=only-on-failure --junitxml=test-results.xml
          }
        } else {
          pytest api_tests/ ui_tests/ --html=report.html --self-contained-html --css=assets/style.css --capture=sys --show-capture=all --verbose --tb=long --screenshot=only-on-failure --junitxml=test-results.xml
        }

    - name: Upload test report
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: report.html

    - name: Publish Test Results to Azure DevOps
      uses: rasunkar/publishtestresults-action@v1.0.0-beta
      with:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-results.xml'
        searchFolder: ${{ github.workspace }}
        mergeTestResults: true
        testRunTitle: "GitHub Actions Test Run"
        failTaskOnFailedTests: false
        adoOrganizationName: ${{ env.AZURE_DEVOPS_ORG }}
        adoProjectName: ${{ env.AZURE_DEVOPS_PROJECT }}
      env:
        ADO_ACCESS_TOKEN: ${{ env.AZURE_DEVOPS_PAT }} 